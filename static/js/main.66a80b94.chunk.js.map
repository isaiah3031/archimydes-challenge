{"version":3,"sources":["frontend/constants/action_types.js","frontend/actions/session_actions.js","frontend/util/session_api_util.js","frontend/components/login/login_form.jsx","frontend/components/login/login_form_container.js","_helpers/auth_header.js","frontend/actions/story_actions.js","frontend/util/story_api_util.js","frontend/components/story_list/story_list_item.jsx","frontend/util/story_list_sort.js","frontend/components/story_list/story_list.jsx","frontend/components/story_list/story_list_container.js","frontend/components/story_form/story_form.jsx","frontend/components/story_form/story_form_container.jsx","frontend/util/route_util.jsx","frontend/components/story_detail/story_detail.jsx","frontend/components/story_detail/story_detail_container.js","frontend/components/entry.jsx","frontend/reducers/session_reducer.js","frontend/reducers/story_reducer.js","frontend/reducers/entities_reducer.js","frontend/reducers/root_reducer.js","frontend/store/store.js","App.js","reportWebVitals.js","index.js"],"names":["RECEIVE_CURRENT_USER","RECEIVE_STORY_LIST","RECEIVE_STORY","loginUser","user","dispatch","$","ajax","contentType","type","url","data","JSON","stringify","login","then","localStorage","setItem","types","receiveCurrentUser","LoginForm","history","useHistory","useState","email","setEmail","password","setPassword","useToggle","isAdmin","toggleAdmin","className","onChange","e","target","value","placeholder","name","onClick","push","LoginFormContainer","connect","authHeader","parse","getItem","token","receiveStoryList","stories","receiveStory","story","fetchStoryList","headers","createStory","StoryAPIUtil","id","editStory","status","fetchStory","StoryListItem","row","summary","description","complexity","estimatedHrs","cost","Object","values","map","col","undefined","Math","random","error","compareID","storyA","storyB","compareComplexity","complexityToInt","StoryList","currentUser","useEffect","sortBy","setSortBy","column","tableHeaderClick","sort","sortByComplexity","sortByID","role","StoryFormContainer","state","session","entities","StoryForm","setSummary","setDescription","setType","setComplexity","selected","disabled","preventDefault","handleSubmit","PrivateRoute","Component","component","rest","render","props","to","pathname","from","location","StoryDetail","useParams","StoryDetailContainer","Entry","exact","path","StoryListContainer","initialState","sessionReducer","action","freeze","storyReducer","assign","entitiesReducer","combineReducers","StoryListReducer","rootReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","persistor","persistStore","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66a80b94.chunk.js","sourcesContent":["export const RECEIVE_CURRENT_USER = 'RECEIVE_CURRENT_USER'\n\nexport const RECEIVE_STORY_LIST = 'RECEIVE_STORY_LIST'\nexport const RECEIVE_STORY = 'RECEIVE_STORY'","import * as types from '../constants/action_types'\nimport { login } from '../util/session_api_util'\n\nexport const receiveCurrentUser = user => ({\n  type: types.RECEIVE_CURRENT_USER,\n  user\n})\n\nexport const loginUser = user => dispatch => {\n  login(user).then(user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    return dispatch(receiveCurrentUser(user))\n  })\n}","import $ from \"jquery\"\n\n\nexport const login = (user) =>\n  $.ajax({\n    contentType: 'application/json',\n    type: 'POST',\n    url: 'http://localhost:3000/api/v1/signin',\n    data: JSON.stringify(user)\n  })\n","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useToggle } from 'react-use'\nimport './login_form.scss'\n\nconst LoginForm = ({ loginUser }) => {\n  const history = useHistory()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isAdmin, toggleAdmin] = useToggle(false)\n\n  const adminButtonText = () => isAdmin ? 'Toggle to User' : 'Toggle To Admin'\n\n  const formHeaderText = () => isAdmin ? 'Admin Login' : 'User Login'\n\n  const handleSubmit = () => {\n    loginUser({ 'email': email, 'password': password, 'isAdmin': isAdmin })\n    {\n      isAdmin ? history.push('/') : history.push('/createStory')\n    }\n  }\n\n  return <div className='login_form'>\n    <h2>{formHeaderText()}</h2>\n    <input onChange={(e) => setEmail(e.target.value)}\n      placeholder='name'\n      name='email'\n    />\n    <input onChange={(e) => setPassword(e.target.value)}\n      type='password'\n      placeholder='password'\n      name='password'\n    />\n    <div>\n      <button onClick={() => toggleAdmin()}>\n        {adminButtonText()}\n      </button>\n      <button onClick={() => handleSubmit()}>Login</button>\n    </div>\n\n  </div>\n}\n\nexport default LoginForm\n","import { connect } from 'react-redux'\nimport { loginUser } from '../../actions/session_actions'\nimport LoginForm from './login_form'\n\nconst mapDispatchToProps = dispatch => ({\n  loginUser: user => dispatch(loginUser(user))\n})\n\nconst LoginFormContainer = connect(\n  null,\n  mapDispatchToProps\n)(LoginForm)\n\nexport default LoginFormContainer;","export const authHeader = () => {\n  // return authorization header with jwt token\n  let user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    return { 'Authorization': 'Bearer ' + user.token };\n  } else {\n    return {};\n  }\n}","import * as types from '../constants/action_types'\nimport * as StoryAPIUtil from '../util/story_api_util'\n\nconst receiveStoryList = (stories) => ({\n  type: types.RECEIVE_STORY_LIST,\n  stories\n})\n\nconst receiveStory = (story) => ({\n  type: types.RECEIVE_STORY,\n  story\n})\n\nexport const fetchStoryList = () => dispatch =>\n  StoryAPIUtil.fetchStoryList().then(stories => dispatch(receiveStoryList(stories)))\n\nexport const createStory = (story) => dispatch => {\n  return StoryAPIUtil.createStory(story).then(story => \n    dispatch(receiveStoryList({[story.id]: { story }})))\n}\n\nexport const editStory = (id, story) => dispatch => {\n  return StoryAPIUtil.setStatus(id, story).then(story =>\n    dispatch(receiveStory(story))\n  )\n}\n\nexport const fetchStory = (id) => dispatch => {\n  return StoryAPIUtil.getStory(id).then(story => dispatch(receiveStory(story)))\n}","import $ from 'jquery'\nimport { authHeader } from '../../_helpers/auth_header'\n\nexport const fetchStoryList = () =>\n  $.ajax({\n    type: 'GET',\n    url: 'http://localhost:3000/api/v1/stories',\n    headers: authHeader()\n  })\n\nexport const createStory = (story) =>\n  $.ajax({\n    contentType: 'application/json',\n    type: 'POST',\n    url: 'http://localhost:3000/api/v1/stories',\n    data: JSON.stringify(story),\n    headers: authHeader()\n  })\n\nexport const setStatus = (id, status) =>\n  $.ajax({\n    contentType: 'application/json',\n    type: 'PUT',\n    url: `http://localhost:3000/api/v1/stories/${id}/${status}`,\n    headers: authHeader()\n  })\n\nexport const getStory = (id) =>\n  $.ajax({\n    contentType: 'application/json',\n    type: 'GET',\n    url: `http://localhost:3000/api/v1/stories/${id}`,\n    headers: authHeader()\n  })","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './table.scss'\n\nconst StoryListItem = ({ story, isAdmin }) => {\n  const history = useHistory()\n  const { id, summary, description, type, complexity, estimatedHrs, cost } = story\n  const row = { id, summary, description, type, complexity, estimatedHrs, cost }\n\n  const rowColor = () => {\n    if (story.status === undefined || !isAdmin) return ''\n    return story.status === 'rejected' ? 'row-red' : 'row-green'\n  }\n  try {\n    return <>\n      {Object.values(row).map(col => <td\n        key={Math.random(15)}\n        onClick={() => { isAdmin && history.push(`/story/${story.id}`) }}\n        className={`${rowColor()}`}>\n        {col}\n      </td>)}\n    </>\n  } catch (error) {\n    return null\n  }\n\n}\n\nexport default StoryListItem","const compareID = (storyA, storyB) => {\n  if (storyA.id > storyB.id) return 1;\n  if (storyA.id < storyB.id) return -1\n  return 0\n}\n\nconst compareComplexity = (storyA, storyB) => {\n  if (complexityToInt(storyA) > complexityToInt(storyB)) return 1;\n  if (complexityToInt(storyA) < complexityToInt(storyB)) return -1\n  return 0\n}\n\nconst complexityToInt = (story) => {\n  switch (story.complexity) {\n    case 'mid': return 1;\n    case 'high': return 2;\n    default: return 0\n  }\n}\n\nexport const sortByID = (stories) => stories.sort(compareID)\n\nexport const sortByComplexity = (stories) => stories.sort(compareComplexity)","import React, { useEffect, useState } from 'react'\nimport StoryListItem from './story_list_item'\nimport { sortByID, sortByComplexity } from '../../util/story_list_sort'\nimport './table.scss'\n\nconst StoryList = ({ currentUser, stories, fetchStoryList }) => {\n  useEffect(() => {\n    fetchStoryList()\n  }, [])\n\n  const [sortBy, setSortBy] = useState('id')\n\n  const tableHeaders = [\n    'id',\n    'summary',\n    'description',\n    'type',\n    'complexity',\n    'estimatedHrs',\n    'cost'\n  ]\n\n  const tableHeaderClick = (column) => {\n    if (column === 'id' || column === 'complexity') {\n      setSortBy(column)\n    } else {\n      return null\n    }\n  }\n\n  const storyList = () => {\n    if (sortBy === 'complexity') {\n      return sortByComplexity(Object.values(stories))\n    } else {\n      return sortByID(Object.values(stories))\n    }\n  }\n\n  try {\n    return <>\n      <h2>Story List</h2>\n      <table>\n        <thead>\n          {<tr key={Math.random(999)} >\n            {\n              tableHeaders.map(column =>\n                <th key={Math.random(999)} onClick={() =>\n                  tableHeaderClick(column)} className={column === 'id' ||\n                    column === 'complexity' ? 'clickable' : ''}>\n                  {column}\n                </th>\n              )\n            }\n          </tr>}\n        </thead>\n        <tbody>\n          {storyList().map(story =>\n            <tr key={Math.random(999)}>\n              <StoryListItem isAdmin={currentUser.role === 'Admin'} story={story} />\n            </tr>)\n          }\n        </tbody>\n\n\n\n      </table>\n    </>\n  } catch (error) {\n    return null\n  }\n}\n\nexport default StoryList","import { connect } from 'react-redux'\nimport { fetchStoryList } from '../../actions/story_actions'\nimport StoryList from './story_list'\n\nconst mapStateToProps = state => ({\n  currentUser: state.session,\n  stories: state.entities.stories\n})\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStoryList: () => dispatch(fetchStoryList())\n})\n\nconst StoryFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StoryList)\n\nexport default StoryFormContainer;","import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport './story_form.scss'\n\nconst StoryForm = ({ createStory, isAdmin }) => {\n  const history = useHistory()\n  const [summary, setSummary] = useState('')\n  const [description, setDescription] = useState('')\n  const [type, setType] = useState('')\n  const [complexity, setComplexity] = useState('')\n  const [estimatedHrs, setestimatedHrs] = useState('')\n  const [cost, setCost] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    createStory({\n      'summary': summary,\n      'description': description,\n      'type': type,\n      'complexity': complexity,\n      // 'estimatedHrs': estimatedHrs,\n      // 'cost': parseInt(cost)\n    }).then(() => history.push('/'))\n  }\n\n  return <div className='story-form'>\n    <h2>Story Form</h2>\n    <input placeholder='Summary' name='summary' onChange={(e) => setSummary(e.target.value)} />\n    <textarea\n      placeholder='Description'\n      name='description'\n      onChange={(e) => setDescription(e.target.value)}>\n    </textarea>\n    <select name='type' onChange={(e) =>\n      setType(e.target.value)\n    }>\n      <option selected disabled>Type</option>\n      <option value='enhancement'>enhancement</option>\n      <option value='bugfix'>bugfix</option>\n      <option value='development'>development</option>\n      <option value='qa'>QA</option>\n    </select>\n    <select name='complexity' onChange={(e) => setComplexity(e.target.value)}>\n      <option selected disabled>Complexity</option>\n      <option value='low'>Low</option>\n      <option value='mid'>Mid</option>\n      <option value='high'>High</option>\n    </select>\n    <button onClick={(e) => handleSubmit(e)}>Submit</button>\n  </div>\n}\n\nexport default StoryForm","import { connect } from 'react-redux'\nimport { createStory } from '../../actions/story_actions'\nimport StoryForm from './story_form'\n\nconst mapStateToProps = state => ({\n  isAdmin: state.session.role === 'Admin'\n})\n\nconst mapDispatchToProps = dispatch => ({\n  createStory: story => dispatch(createStory(story))\n})\n\nconst StoryFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StoryForm)\n\nexport default StoryFormContainer\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    localStorage.getItem('user')\n      ? <Component {...props} />\n      : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n  )} />\n)","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport './story_detail.scss'\n\nconst StoryDetail = ({ story, fetchStory, editStory }, props) => {\n  useEffect(() => {\n    fetchStory(id)\n  }, [])\n\n  const { id } = useParams()\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    editStory(id, e.target.value).then(() => history.push('/'))\n  }\n\n  try {\n    return <div className='story-detail'>\n      <h2>Admin Story View Page</h2>\n      <div className='story-detail__contents'>\n        <section className='story-detail__text'>\n          <p>{story.summary}</p>\n          <p>{story.description}</p>\n        </section>\n        <table>\n          <tr><th>ID:</th><td>{story.id}</td></tr>\n          <tr><th>Complexity:</th><td>{story.type}</td></tr>\n          <tr><th>Cost:</th><td>{story.cost}</td></tr>\n          <tr><th>Est Hours:</th><td>{story.estimatedHrs}</td></tr>\n        </table>\n      </div>\n      <div className='story-detail__btn-container'>\n        <button className='red-btn' value='rejected'\n          onClick={e => handleSubmit(e)}>Reject</button>\n        <button className='green-btn' value='accepted'\n          onClick={e => handleSubmit(e)}>Accept</button>\n      </div>\n    </div >\n  } catch (error) {\n    return null\n  }\n}\n\nexport default StoryDetail","import { connect } from 'react-redux'\nimport { editStory, fetchStory } from '../../actions/story_actions'\nimport StoryDetail from './story_detail'\n\nconst mapStateToProps = state => ({\n  isAdmin: state.session.isAdmin,\n  story: state.entities.stories\n})\n\nconst mapDispatchToProps = dispatch => ({\n  editStory: (id, status) => dispatch(editStory(id, status)),\n  fetchStory: (id) => dispatch(fetchStory(id))\n})\n\nconst StoryDetailContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StoryDetail)\n\nexport default StoryDetailContainer","import React from \"react\";\nimport { Route, Link } from 'react-router-dom'\nimport LoginFormContainer from './login/login_form_container'\nimport StoryListContainer from './story_list/story_list_container'\nimport StoryFormContainer from './story_form/story_form_container'\nimport { PrivateRoute } from '../util/route_util'\nimport StoryDetailContainer from './story_detail/story_detail_container'\n\nconst Entry = () => {\n  return <div>\n    <button><Link to='/login'>Login</Link></button>\n    <button><Link to='createStory'>Create Story</Link></button>\n    <Route exact path='/login' component={LoginFormContainer} />\n    <PrivateRoute exact path='/createStory' component={StoryFormContainer} />\n    <PrivateRoute exact path='/' component={StoryListContainer} />\n    <PrivateRoute path='/story/:id' component={StoryDetailContainer} />\n  </div>\n}\n\nexport default Entry;","import * as types from '../constants/action_types.js'\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? { user } : {};\n\nconst sessionReducer = (state = initialState, action) => {\n  Object.freeze(state)\n\n  switch (action.type) {\n    case (types.RECEIVE_CURRENT_USER):\n      return action.user\n    default:\n      return state\n  }\n}\n\nexport default sessionReducer","import * as types from '../constants/action_types'\n\nconst storyReducer = (state = {}, action) => {\n  Object.freeze(state)\n\n  switch (action.type) {\n    case types.RECEIVE_STORY_LIST:\n      return Object.assign({}, state, action.stories)\n    case types.RECEIVE_STORY:\n      return action.story\n    default:\n      return state;\n  }\n}\n\nexport default storyReducer","import { combineReducers } from 'redux'\nimport StoryListReducer from '../reducers/story_reducer'\n\nconst entitiesReducer = combineReducers({\n  stories: StoryListReducer\n})\n\nexport default entitiesReducer","import { combineReducers } from 'redux'\nimport sessionReducer from './session_reducer'\nimport entitiesReducer from './entities_reducer'\n// import errorsReducer from './errors_reducer'\n// import uiReducer from './ui_reducer'\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n  entities: entitiesReducer,\n  // errors: errorsReducer,\n  // ui: uiReducer,\n})\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport storage from 'redux-persist/lib/storage'\nimport rootReducer from '../reducers/root_reducer'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(persistedReducer, composeWithDevTools(\n  applyMiddleware(thunk, logger))\n);\n\nconst persistor = persistStore(store)\n\nexport { store, persistor };","import { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { HashRouter } from 'react-router-dom'\nimport './App.css';\nimport Entry from './frontend/components/entry'\nimport { store, persistor } from './frontend/store/store'\n\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <HashRouter>\n        <Entry />\n      </HashRouter>\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './frontend/store/store'\nimport $ from 'jquery'\nimport { receiveCurrentUser } from './frontend/actions/session_actions'\n// window.receiveCurrentUser = receiveCurrentUser\n// window.getState = store.getState;\n// window.dispatch = store.dispatch;\n\n// window.$ = $\nReactDOM.render(\n  <React.StrictMode>\n    <App store={store} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}